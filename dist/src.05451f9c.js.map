{"version":3,"sources":["src/state.js","src/data.js","src/components/lightbox/index.js","src/components/search/index.js","src/index.js"],"names":["state","searchTerm","searchBy","drinks","setState","toSet","newValue","fetchDrinksByName","url","fetch","then","res","json","data","catch","error","console","fetchDrinksByIngredient","lightbox","markup","forEach","drink","strDrinkThumb","title","strDrink","init","Array","from","document","querySelectorAll","addEventListener","openLightbox","e","preventDefault","currentImageIndex","getCurrentImageIndex","event","target","log","currentImage","map","img","outerHTML","findIndex","clearLightbox","querySelector","remove","getElementById","doSearch","search","term","value","toLowerCase","type","alert","insertAdjacentHTML"],"mappings":"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","file":"src.05451f9c.js","sourceRoot":"..","sourcesContent":["const state = {\n    searchTerm: null,\n    searchBy: null,\n    drinks: null,\n};\n\nconst setState = (toSet, newValue) => {\n    state[toSet] = newValue;\n};\n\nexport { state, setState };","import { state } from \"./state\";\n\nexport function fetchDrinksByName() {\n    const url = `https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${state.searchTerm}`;\n    return fetch(url)\n        .then(res => res.json())\n        .then(data => data.drinks)\n        .catch(error => console.error(error));\n}\n\nexport function fetchDrinksByIngredient() {\n    const url = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${state.searchTerm}`;\n    return fetch(url)\n        .then(res => res.json())\n        .then(data => data.drinks)\n        .catch(error => console.error(error));\n}","import { state, setState } from \"../../state\";\nimport \"./index.css\";\n\nexport default function lightbox() {\n    let markup = `<div class=\"lightbox\">`;\n    state.drinks.forEach(drink => {\n        const url = drink.strDrinkThumb;\n        const title = drink.strDrink;\n        markup += `<div class=\"thumbnail\">\n            <img src=\"${url}\" alt=\"${title}\" />\n        </div>`;\n    });\n    markup += `</div>`;\n    return markup;\n}\n\nexport function init() {\n    const drinks = Array.from(document.querySelectorAll(`.lightbox img`));\n    drinks.forEach(drink => {\n        drink.addEventListener(`click`, openLightbox);\n    });\n}\n\nfunction openLightbox(e) {\n    e.preventDefault();\n    const currentImageIndex = getCurrentImageIndex(event.target);\n    setState(`currentImage`, currentImageIndex);\n    console.log(state.currentImage);\n}\n\nfunction getCurrentImageIndex(drink) {\n    const drinks = Array.from(document.querySelectorAll(`.lightbox img`));\n\n    let currentImageIndex = drinks\n        .map(img => img.outerHTML)\n        .findIndex(img => img == drink.outerHTML);\n\n    return currentImageIndex;\n}\n\nexport function clearLightbox() {\n    const lightbox = document.querySelector(`.lightbox`);\n    if (lightbox) lightbox.remove();\n}","import \"./index.css\";\n\nimport { state, setState } from \"../../state\";\nimport { fetchDrinksByName, fetchDrinksByIngredient } from \"../../data\";\nimport lightbox, { init as initLightbox, clearLightbox } from \"../lightbox\";\n\nexport function init() {\n    const search = document.getElementById(`search`);\n    search.addEventListener(`submit`, doSearch);\n}\n\nexport default function search() {\n    return `\n        <h1>Find Your Cocktail üç∏</h1>\n        <form name=\"search\" id=\"search\">\n            <p><label for=\"search-field\">Enter Search Term Below:</label></p>\n            <input id=\"search-field\" name=\"search-term\" type=\"search\" />\n            <select id=\"search-select\" name=\"search-type\">\n                <option value=\"name\">By Cocktail Name</option>\n                <option value=\"ingredient\">By Ingredient</option>\n            </select>\n            <input type=\"submit\" id=\"submit\" value=\"Search Cocktails\" />\n        </form>\n    `;\n}\n\nasync function doSearch(e) {\n    e.preventDefault();\n    clearLightbox();\n\n    const term = document.getElementById(`search-field`).value.toLowerCase();\n    const type = document.getElementById(`search-select`).value.toLowerCase();\n    setState(`searchTerm`, term );\n    setState(`searchBy`, type );\n\n    console.log(`type`, type);\n    let drinks = {};\n\n    if (`name` === type ) {\n        drinks = await fetchDrinksByName();\n    } else {\n        drinks = await fetchDrinksByIngredient();\n    }\n    \n    setState(`drinks`, drinks);\n    console.log(state.drinks);\n\n    if (state.drinks === null) {\n        alert(`There are no results for \"${state.searchTerm}\"`);\n        setState(`searchTerm`, null);\n        document.getElementById(`search-field`).value = state.searchTerm;\n    } else {\n        const markup = lightbox();\n        document.getElementById(`app`).insertAdjacentHTML(`beforeend`, markup);\n        initLightbox();\n    }\n}","import \"./index.css\";\r\n\r\nimport search, { init as initSearch } from \"./components/search\";\r\n\r\nfunction init() {\r\n    let markup = search();\r\n    document.getElementById(`app`).insertAdjacentHTML(`beforeend`,markup);\r\n\r\n    initSearch();\r\n}\r\n\r\ninit();\r\n"]}